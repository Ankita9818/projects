steps:

1: git init			//initialized repo
2: git add .		//added files to staging area
3: git commit -m "Commit message"		//committing changes
4: git rm file2.txt						//removing file
		touch .gitignore					//creating a gitignore file
		git diff HEAD file3.txt   //show the changes added to worktree from the last commit.
5: git checkout filename      //reverts changes before added to staging area
6: git reset HEAD hello.rb //reset staging area
	 git checkout filename   //checkout to repos version 
7: git revert HEAD  			 // undo committed changes
8: git status
9: git log
10: git show <hash>				//specifying a specific commit
11: git branch feature1
		git branch feature2		//creating branch
		git branch -d feature2	//deleting branch
12: git checkout feature1		// checkout to branch and did commits
13:	git checkout master			
14: git merge feature1			//merge feature1 in master
15: git checkout -b feature2	// created brach and chekedout to it
16:	git checkout master
17: git rebase feature2
18: Diff between merge and rebase :-
Both of these commands integrate changes from one branch into another branch but in different ways.
Merging does not changes the history.
Rebase: It makes the entire master branch to begin on the tip of feature branch.
It rewrites the history by adding commits for each previous commit.
19: git stash
		git stash apply
20: git push -u origin master


